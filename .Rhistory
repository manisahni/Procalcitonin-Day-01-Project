rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(35)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+ESLD:PLATELETS.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(36)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+ESLD:PLATELETS.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(37)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+ESLD:PLATELETS.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(38)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+ESLD:PLATELETS.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(39)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+ESLD:PLATELETS.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(39)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(40)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(41)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(42)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(43)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(44)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(44)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(44)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD+IHD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(44)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD+IHD+AFIB,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(45)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD+IHD+AFIB,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(46)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD+IHD+AFIB,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(47)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD+IHD+AFIB,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(48)
data<- chf3
library(caret)
trainingRows <- createDataPartition(data$akiR2,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(akiR2 ~ log(PROCALCITONIN.d01)+ PHtn+min_sodium+CR.d01+AGE+ESLD+IHD+AFIB,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$akiR2, prediction)
plot(testing.roc)
ci(testing.roc)
chf3 <- mutate(chf,akiR2= (devakirifle2=="TRUE" | rifle3=="TRUE"))
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(2014)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+CHFTYPE+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(2019)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+CHFTYPE+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(2019)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(20120)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(20120)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+AGE,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(20120)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+AGE+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(2015)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+AGE+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
chf <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/chf.csv")
set.seed(2014)
data<- chf
library(caret)
trainingRows <- createDataPartition(data$rifle3,p=0.8, list=FALSE)
training <- data[trainingRows,]
testing <- data[-trainingRows,]
train.fit<- glm(rifle3 ~  log(PROCALCITONIN.d01)+CR.d01+PHtn+min_sodium+CHFTYPE+ESLD,data=training, na.action=na.exclude, family=binomial(link=logit))
library(Deducer)
rocplot(train.fit)
prediction <- predict(train.fit, backtransform=TRUE,newdata=testing)
library(pROC)
testing.roc <- roc(testing$rifle3, prediction)
plot(testing.roc)
ci(testing.roc)
AUC <- (0.96,0.72,0.68,0.98,0.85,0.68,0.88,0.89,0.838,0.97,0.967,1,0.7262,0.750.79,0.94,0.94,0.88,0.87,0.84,0.767)
AUC <- C(0.96,0.72,0.68,0.98,0.85,0.68,0.88,0.89,0.838,0.97,0.967,1,0.7262,0.750.79,0.94,0.94,0.88,0.87,0.84,0.767)
AUC <- x(0.96,0.72,0.68,0.98,0.85,0.68,0.88,0.89,0.838,0.97,0.967,1,0.7262,0.750.79,0.94,0.94,0.88,0.87,0.84,0.767)
AUC <- c(0.96,0.72,0.68,0.98,0.85,0.68,0.88,0.89,0.838,0.97,0.967,1,0.7262,0.750.79,0.94,0.94,0.88,0.87,0.84,0.767)
AUC <- c(0.96,0.72,0.68,0.98,0.85,0.68,0.88,0.89,0.838,0.97,0.967,1,0.7262,0.750,079,0.94,0.94,0.88,0.87,0.84,0.767)
t.test(AUC)
AUC <- c(0.96,0.72,0.68,0.98,0.85,0.68,0.88,0.89,0.838,0.97,0.967,1,0.7262,0.750,0.79,0.94,0.94,0.88,0.87,0.84,0.767)
t.test(AUC)
with(chf,table(devaki))
with(chf,table(rifle3))
View(chf)
with(chfnoesrd,table(rifle3))
with(chfnoesrd,table(devaki))
with(chfnoesrd,table(aki))
with(chfnoesrd, table(d2max_cr/CR.d01 >=0.5))
with(chfnoesrd, table(d2max_cr/CR.d01 >=1.5))
with(chfnoesrd, table(d2max_cr/CR.d01 <= 0.5))
AUC
mean(AUC)
plot(density(AUC))
quatile(AUC, c(.025, .975))
quantile(AUC, c(.025, .975))
library(dplyr, chf)
library(dplyr)
chf <- mutate(chf,aki=d2max_cr/CR.d01>=1.5)
chf <- mutate(chf,devaki=d2max_cr/CR.d01>=1.5)
chf <- mutate(chf,devakirifle2=d2max_cr/CR.d01>=1.5)
setwd("~/Desktop/Procalcitonin Day 01 Priject")
write.csv(chf,"chf.csv")
library(caret)
data(GermancCredit)
data(GermanCredit)
View(GermanCredit)
??GermanCredit
/library/caret/
.libPath(AppliedPredcitiveModelling)
libPaths(AppliedPredcitiveModelling)
.libPaths()
load("/Users/manisahni/Downloads/models.RData")
View(DT)
set.seed(1056)
svmFit <- train(Class ~. , data=GermanCreditTrain,method="svmRadial")
data(GermanCreditTrain)
load("/Users/manisahni/Downloads/models (2).RData")
models()
data(DataGermanCreditTrain)
GermanCreditTrain <- createDataPartition(classes, p=0.8,list=FALSE)
GermanCreditTrain <- createDataPartition(Class, p=0.8,list=FALSE)
data(GermanCredit)
GermanCreditTrain <- createDataPartition(Class, p=0.8,list=FALSE)
GermanCreditTrain <- createDataPartition(GermanCredit$Class, p=0.8,list=FALSE)
trainingrows <- createDataPartition(GermanCredit$Class, p=0.8,list=FALSE)
GermanCreditTrain <- trainingrows[,GermanCredit]
GermanCreditTrain <- trainingrows[GermanCredit,]
GermanCreditTrain <- GermanCredit[trainingrows,]
GermantCreditTest <- GermanCredit[-trainingrows,]
GermanCreditTest <- GermanCredit[-trainingrows,]
svmFit <- train(Class ~. , GermanCreditTrain, method="svmRadial")
warnings()
svmFit <- train(Class ~ . , GermanCreditTrain, method="svmRadial")
set.seed(1056)
svmFit <- train(Class ~. data=GermanCreditTrain, method="svmRadial", preProc=c("center","scale"))
svmFit <- train(Class ~ . data=GermanCreditTrain, method="svmRadial", preProc=c("center","scale"))
svmFit <- train(Class ~ . , GermanCreditTrain, method="svmRadial")
svmFit <- train(Class ~ . GermanCreditTrain, method="svmRadial", preProc=c("center","scale"))
svmFit <- train(Class ~ . ,GermanCreditTrain, method="svmRadial", preProc=c("center","scale"))
svmFit <- train(Class ~ . ,GermanCreditTrain, method="svmRadial", preProc=c("center","scale"), tuneLength=10)
svmFit <- train(Class ~ . ,GermanCreditTrain, method="svmRadial", preProc=c("center","scale"), tuneLength=10, trControl= trainControl(method="repeatedcv", repeats=5))
svmFit
plot(svmFit)
predictedClasses <- predict(svmFit, GermanCreditTest)
str(predictedClasses)
View(predictedClassed)
View(predictedClasses)
predictedClasses <- predict(svmFit, GermanCreditTest, type="prb")
predictedClasses <- predict(svmFit, GermanCreditTest, type="pr0b")
predictedClasses <- predict(svmFit, GermanCreditTest, type="prob")
head(predictedClasses)
predictedClasses <- predict(svmFit, newdata=GermanCreditTest, type="prob")
predictedClasses <- predict(svmFit, GermanCreditTest, type="prob")
predictedClasses <- predict(svmFit, GermanCreditTest)
head(predictedClasses)
set.seed(1056)
logis <- train(Class ~ . ,GermanCreditTrain, method="glm",trainControl(method="repeatedcv", repeats=5))
logis <- train(Class ~ . ,GermanCreditTrain, method="glm",trControl=trainControl(method="repeatedcv", repeats=5))
logis
resamp <- resamples(list(SVM = svmFit,Logistic=logis))
summary(resamp)
??xyplot.resamples(resamp)
??xyplot.resamples
library(caret)
??glm
scriptLocation()
library(AppliedPredictiveModelling)
library(AppliedPredictiveModeling)
scriptLocation()
source('~/.active-rstudio-document', echo=TRUE)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
View(segementationOriginal)
View(segmentationOriginal)
data(cars)
View(cars)
cars
VIew(cars)
carSubset <- cars[sample(1:nrow(cars), 20), c(1, 2, 19)]
cars$Type <- factor(apply(cars[, 14:18], 1, function(x) type[which(x == 1)]))
data(cars)
type <- c("convertible", "coupe", "hatchback", "sedan", "wagon")
cars$Type <- factor(apply(cars[, 14:18], 1, function(x) type[which(x == 1)]))
carSubset <- cars[sample(1:nrow(cars), 20), c(1, 2, 19)]
View(cars)
type <- c("convertible", "coupe", "hatchback", "sedan", "wagon")
type[which(x == 1)]
??which
