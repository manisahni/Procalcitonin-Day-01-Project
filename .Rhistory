## define the esld subset and exclude the chronic dialysis patients##
anonmaster4 <- read.csv("~/Desktop/Procalcitonin Day 01 Priject/anonmaster4.csv")
esld <- subset(anonmaster4, ESLD=="ESLD")
esldnonesrd <- subset(esld, ESRD_CKD.5="non ESRD.CKD5")
## glm for predicing the risk of starting rrt in the encounter in this subset##
rrtbin <- glm(rrtbin ~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
rifle1 <- glm(devaki ~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
rifle2 <- glm(devakirifle2 ~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
rifle3  <- glm(devakirifle3 ~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
summary(rrtbin)
summary(rifle1)
summary(rifle2)
summary(rifle3)
View(esldnonesrd)
devaki
data <- esldnonesrd
data['aki']
is.factor(data['aki'])
is.vecotr(data['aki'])
is.vector(data['aki'])
is.logical(data['aki'])
type(data['aki'])
levels(data['aki'])
g <- glm(devaki~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
g
summary(g)
g <- glm(devakirifle2~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
g <- glm(devakirifle2~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=data, family=binomial(link=logit))
g <- glm(devakirifle3~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=data, family=binomial(link=logit))
g <- glm(rifle3~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=data, family=binomial(link=logit))
summary(g)
g <- glm(devakirifle2~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=data, family=binomial(link=logit))
g <- glm(devaki~ WBC.d01 + log(PROCALCITONIN.d01) + CR.d01 +DM2 + Htn + PLATELETS.d01 +LACTATE.d01, data=esldnonesrd, family=binomial(link=logit))
g
summary(g)
View(data)
View(esld)
with(anonMASTER,table(ELSD,ESRD_CKD5)
)
with(anonMASTER,table(ESLD,ESRD_CKD5))
with(anonmaster4,table(ESLD,ESRD_CKD5))
with(esldnoesrd,table(ESLD,ESRD_CKD5,devakirifle3))
with(esldnonesrd,table(ESLD,ESRD_CKD5,devakirifle3))
table <- with(esldnonesrd,table(ESLD,ESRD_CKD5,devakirifle3))
xtabs(tab)
xtabs(table)
summary(table)
table
glm(formula = rifle3 ~ log(PROCALCITONIN.d01) + LACTATE.d01 +
##     WBC.d01 + DM2 + CR.d01 + gender + ALB.d01 + ESLD + PHtn +
##     Htn, family = binomial(link = logit), data = globalnoesrd)
)
model <- lm(formula = rifle3 ~ log(PROCALCITONIN.d01) + LACTATE.d01 +
WBC.d01 + DM2 + CR.d01 + gender + ALB.d01 + ESLD + PHtn +  Htn, family = binomial(link = logit), data = globalnoesrd)
model <- glm(formula = rifle3 ~ log(PROCALCITONIN.d01) + LACTATE.d01 +
WBC.d01 + DM2 + CR.d01 + gender + ALB.d01 + ESLD + PHtn +  Htn, family = binomial(link = logit), data = globalnoesrd)
model
summary(model)
library(leaps)
leaps <- leaps(model,scale=r2)
leaps <- leaps(model,scale="r2")
leaps <- leaps(model)
leaps <- regsubsets (model,globalnoesrd, nbest=10)
leaps <- regsubsets(model,data=globalnoesrd, nbest=10)
leaps <- regsubsets(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd,nbest=10)
plot(leaps,scale=r2)
plot(leaps,scale="r2")
plot(leaps,scale="r2")
glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+WBC.d01+CR.d01,data=globalnoesrd,nbest=10)
glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+WBC.d01+CR.d01,data=globalnoesrd)
summary(model)
fit2 <- (glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+WBC.d01+CR.d01,data=globalnoesrd)
)
summary(fit2)
setwd("~/Dropbox/gist5001172-46b2d5cf8d81d74b884bb5775a233f8bc90c5eb7")
Method #1: The kitchen sink
load package “glmulti”
library(glmulti)
load the data
lakes.df2 <- read.csv("lakes.df2.csv")
View(lakes.df2)
global.model <-  glm(fish~ # number of fishermen
stocked+ # CDFW fish stocking y/n
cows+ # cattle grazing in area y/n
herp.rich+ # amphibian species richness
fish.rich+ # fish species richness
visitors+ # total number of visitors
logsize, # log of the area
data=lakes.df2) # data frame we got this from
summary(global.model)
global.model <-  glm(fish~ # number of fishermen
stocked+ # CDFW fish stocking y/n
cows+ # cattle grazing in area y/n
herp.rich+ # amphibian species richness
fish.rich+ # fish species richness
visitors+ # total number of visitors
logsize, # log of the area
data=lakes.df2) # data frame we got this from
install.packages("glmulti")
install.packages("glmulti")
install.packages("visreg")
library(visreg)
install.packages("MuMIn")
library(MuMIN)
library(MuMIn)
f8 <- glm(fish ~ 1 + stocked + cows + fish.rich + visitors + logsize, data = lakes.df2)
f6 <- glm(fish ~ 1 + stocked + cows + visitors + logsize, data = lakes.df2)
library(MuMIn)
run the top 8 models
f2 <- glm(fish ~ 1 + cows + herp.rich + fish.rich + visitors + logsize, data = lakes.df2)
f3 <- glm(fish ~ 1 + stocked + cows + herp.rich + visitors + logsize, data = lakes.df2)
f4 <- glm(fish ~ 1 + cows + visitors + logsize, data = lakes.df2)
f5 <- glm(fish ~ 1 + cows + fish.rich + visitors + logsize, data = lakes.df2)
f6 <- glm(fish ~ 1 + stocked + cows + visitors + logsize, data = lakes.df2)
f7 <- glm(fish ~ 1 + stocked + cows + herp.rich + fish.rich + visitors + logsize,
data = lakes.df2)
f8 <- glm(fish ~ 1 + stocked + cows + fish.rich + visitors + logsize, data = lakes.df2)
f.ave <- model.avg(f, f2, f3, f4, f5, f6, f7, f8)
summary(f.ave)
library(MuMIn)
run the top 8 models
f2 <- glm(fish ~ 1 + cows + herp.rich + fish.rich + visitors + logsize, data = lakes.df2)
f3 <- glm(fish ~ 1 + stocked + cows + herp.rich + visitors + logsize, data = lakes.df2)
f4 <- glm(fish ~ 1 + cows + visitors + logsize, data = lakes.df2)
f5 <- glm(fish ~ 1 + cows + fish.rich + visitors + logsize, data = lakes.df2)
f6 <- glm(fish ~ 1 + stocked + cows + visitors + logsize, data = lakes.df2)
f7 <- glm(fish ~ 1 + stocked + cows + herp.rich + fish.rich + visitors + logsize,
data = lakes.df2)
f8 <- glm(fish ~ 1 + stocked + cows + fish.rich + visitors + logsize, data = lakes.df2)
f.ave <- model.avg(f, f2, f3, f4, f5, f6, f7, f8)
summary(f.ave)
f.ave
library(MuMIN)
library(MuMIN)
library(MuMIn)
f.ave <- model.avg(f, f2, f3, f4, f5, f6, f7, f8)
summary(f.ave)
fave <- model.avg(f, f2, f3, f4, f5, f6, f7, f8)
f.ave <- model.avg(f2, f2, f3, f4, f5, f6, f7, f8)
library(MuMIn)
run the top 8 models
f2 <- glm(fish ~ 1 + cows + herp.rich + fish.rich + visitors + logsize, data = lakes.df2)
f3 <- glm(fish ~ 1 + stocked + cows + herp.rich + visitors + logsize, data = lakes.df2)
f4 <- glm(fish ~ 1 + cows + visitors + logsize, data = lakes.df2)
f5 <- glm(fish ~ 1 + cows + fish.rich + visitors + logsize, data = lakes.df2)
f6 <- glm(fish ~ 1 + stocked + cows + visitors + logsize, data = lakes.df2)
f7 <- glm(fish ~ 1 + stocked + cows + herp.rich + fish.rich + visitors + logsize,
data = lakes.df2)
f8 <- glm(fish ~ 1 + stocked + cows + fish.rich + visitors + logsize, data = lakes.df2)
f.ave <- model.avg(f1, f2, f3, f4, f5, f6, f7, f8)
summary(f.ave)
f
f <- glm(fish ~ 1 + cows + herp.rich + visitors + logsize, data = lakes.df2)
summary(f)
install.packages(bbmle)
install.packages("bbmle")
library(bbmle)
??bbmle
help(bbmle)
library(bbmle)
## load the data
fishlakes <- read.csv("fishlakes.csv")
head(fishlakes)
View(fishlakes)
m1 <- glm(treatment ~ 1 + logveg + bank.slope, family = binomial("logit"), data = fishlakes)
m2 <- glm(treatment ~ 1 + logveg + silt.total + bank.slope, family = binomial("logit"),
data = fishlakes)
m3 <- glm(treatment ~ 1 + raca.basin + logveg + bank.slope, family = binomial("logit"),
data = fishlakes)
m4 <- glm(treatment ~ 1 + BUBO.breeding + logveg + bank.slope, family = binomial("logit"),
data = fishlakes)
m5 <- glm(treatment ~ 1 + BUBO.breeding + logveg + bank.slope + raca.basin,
family = binomial("logit"), data = fishlakes)
m6 <- glm(treatment ~ 1 + raca.basin * BUBO.breeding, family = binomial("logit"),
data = fishlakes)
m7 <- glm(treatment ~ 1 + herbacious + raca.basin + lakes.basin, family = binomial("logit"),
data = fishlakes)
m8 <- glm(treatment ~ 1 + BUBO.breeding, family = binomial("logit"), data = fishlakes)
m9 <- glm(treatment ~ BUBO.breeding + herbacious + bank.slope + logveg, family = binomial("logit"),
data = fishlakes)
m10 <- glm(treatment ~ BUBO.breeding * raca.basin + herbacious + lakes.basin,
family = binomial("logit"), data = fishlakes)
m11 <- glm(treatment ~ 1 + bank.slope + logveg + BUBO.breeding:raca.basin, family = binomial("logit"),
data = fishlakes)
fishlakes <- read.csv("~/Dropbox/gist5001172-46b2d5cf8d81d74b884bb5775a233f8bc90c5eb7/fishlakes.csv")
View(fishlakes)
library(bbmle)
## load the data
fishlakes <- read.csv("~/Dropbox/gist5001172-46b2d5cf8d81d74b884bb5775a233f8bc90c5eb7/fishlakes.csv")
setwd("~/Dropbox/gist5001172-46b2d5cf8d81d74b884bb5775a233f8bc90c5eb7")
m1
AICctab(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, base = T, weights = T,
nobs = length(fishlakes))
?AICctab
```{r}
m.ave <- model.avg(m4, m11)
summary(m.ave)
library(boot)
library(glmulti)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(global.model, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(global.model, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(global.model, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit))
multi.global.model <- glmulti(globalrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
summary(multi.global.model)
weightable(multi.global.model)
glm(rifle3 ~ 1 + ESLD + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd)
a <- glm(rifle3 ~ 1 + ESLD + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd)
summary(a)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(global.model, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(global.model, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(global.model, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(globalrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ LACTATE.d01+WBC.d01+DM2+CR.d01+gender+ALB.d01+Htn,data=globalnoesrd, family=binomial(link=logit)))
multi.global.model <- glmulti(globalrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
library(glmulti)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ LACTATE.d01+WBC.d01+DM2+CR.d01+gender+ALB.d01+Htn,data=globalnoesrd, family=binomial(link=logit)))
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+ LACTATE.d01+WBC.d01+DM2+CR.d01+gender+ALB.d01+Htn,data=globalnoesrd, family=binomial(link=logit))
library(glmulti)
multi.global.model <- glmulti(globalrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+Htn+min_sodium+min_hb,data=globalnoesrd, family=binomial(link=logit))
multi.global.model <- glmulti(globalrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
summary(multi.global.model)
library(MuMIn)
f<- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd)
f2 <- glm(rifle3 ~ 1 + CR.d01, data=globalnoesrd)
f3 <- glm(rifle3 ~ 1 + gender + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd)
f4<-glm(rifle3 ~ 1 + DM2 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd)
f5 <- glm(rifle3 ~ 1 + Htn + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd)
```
average the models together
```{r, cache=TRUE}
f.ave <- model.avg(f, f2, f3, f4, f5)
summary(f.ave)
install.packages(pROC)
install.packages("pROC")
library(pROC)
library(MuMIn)
f<- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd)
f2 <- glm(rifle3 ~ 1 + CR.d01, data=globalnoesrd)
f3 <- glm(rifle3 ~ 1 + gender + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd)
f4<-glm(rifle3 ~ 1 + DM2 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd)
f5 <- glm(rifle3 ~ 1 + Htn + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd)
f.ave <- model.avg(f, f2, f3, f4, f5)
summary(f.ave)
library(pROC)
m.roc <- roc(globalnoesrd$rifle3, predict(f.ave, backtransform = TRUE))
plot(m.roc)
f.ave
predict(f.ave)
length(predict(f.ave))
length(predict(f.ave))
globalnoesrd$rifle3
length(globalnoesrd$rifle3)
length(predict(f))
predict(f.ave, na.action=na.pass)
length(predict(f.ave, na.action=na.pass))
length(predict(f.ave, na.action=na.omit))
table(is.na(predict(f.ave))
)
table(is.na(globalnoesrd$CR.d01)
)
globalnoesrd2 <- filter(globalnoesrd, CR.d01!=NA)
globalnoesrd2 <- filter(globalnoesrd, CR.d01 != NA)
globalnoesrd2 <- filter(globalnoesrd, CR.d01 !== NA)
globalnoesrd2 <- filter(globalnoesrd, CR.d01 != NA)
length(predict(f.ave, na.action=na.exclude)
)
f<- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd, na.action=na.exclude)
length(predict(f)
)
globalnoesrd2 <- filter(globalnoesrd, CR.d01!=NA)
f<- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd, na.action=na.exclude)
f2 <- glm(rifle3 ~ 1 + CR.d01, na.action=na.exclude,data=globalnoesrd)
f3 <- glm(rifle3 ~ 1 + gender + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd,na.action=na.exclude)
f4<-glm(rifle3 ~ 1 + DM2 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd,na.action=na.exclude)
f5 <- glm(rifle3 ~ 1 + Htn + log(PROCALCITONIN.d01) + CR.d01, data=globalnoesrd,na.action=na.exclude)
```
average the models together
```{r, cache=TRUE}
f.ave <- model.avg(f, f2, f3, f4, f5,na.action=na.exclude)
summary(f.ave)
predict(f.ave)
length(predict(f.ave))
length(predict(f.ave,na.action=na.exclude)
)
f<- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01,data=globalnoesrd, na.action=na.exclude)
length(predict(f)
)
library(pROC)
m.roc <- roc(globalnoesrd$rifle3, predict(f, backtransform = TRUE))
plot(m.roc)
length(predict(f5))
length(predict(f2)
)
f.ave <- model.avg(f, f2, f3, f4, f5,na.action=na.exclude)
fave <- model.avg(f, f2, f3, f4, f5,na.action=na.exclude)
fave <- model.avg(f, f2, f3, f4, f5)
length(predict(fave))
??model.avg
anonmaster3.6 <- mutate(anonMASTER,rifle2.9 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)
)
))
anonmaster3.6 <- mutate(anonMASTER,rifle2.9 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)))
library(dplyr)
anonmaster3.6 <- mutate(anonMASTER,rifle2.9 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)))
View(anonmaster3.6)
filter(anonmaster3.6, rifle2.9=="TRUE")
filter(anonmaster3.6, rifle2.9=="TRUE") %+%
select(anonmaster3.6,rifle2.9,devak,rrtbin,CR.d01,d2max_cr)
filter(anonmaster3.6, rifle2.9=="TRUE") %+%
+ select(anonmaster3.6,rifle2.9,devak,rrtbin,CR.d01,d2max_cr)
filter(anonmaster3.6, rifle2.9=="TRUE") %@%
+ select(anonmaster3.6,rifle2.9,devak,rrtbin,CR.d01,d2max_cr)
filter(anonmaster3.6, rifle2.9=="TRUE")
filter(anonmaster3.6, rifle2.9=="TRUE") %.%
+ select(anonmaster3.6,rifle2.9,devak,rrtbin,CR.d01,d2max_cr)
filter(anonmaster3.6, rifle2.9=="TRUE") %.%
select(anonmaster3.6,rifle2.9,devaki,rrtbin,CR.d01,d2max_cr)
susbet((anonmaster3.6, rifle2.9=="TRUE"),select(rifle2.9,devaki,rrtbin,CR.d01,d2max_cr))
subset((anonmaster3.6, rifle2.9=="TRUE"),select(rifle2.9,devaki,rrtbin,CR.d01,d2max_cr))
subset(anonmaster3.6, rifle2.9=="TRUE"),select(rifle2.9,devaki,rrtbin,CR.d01,d2max_cr))
subset(anonmaster3.6, rifle2.9=="TRUE",select(rifle2.9,devaki,rrtbin,CR.d01,d2max_cr))
subset(anonmaster3.6, rifle2.9=="TRUE",select=c("rifle2.9","devaki","rrtbin","CR.d01","d2max_cr"))
Viwe <- subset(anonmaster3.6, rifle2.9=="TRUE",select=c("rifle2.9","devaki","rrtbin","CR.d01","d2max_cr"))
View(Viwe)
table(View)
table(Viwe)
Viwe <- subset(anonmaster3.6, rifle2.9=="TRUE",select=c("rifle2.9","devaki","rrtbin","CR.d01","d2max_cr", "ESRD.CKD5"))
Viwe <- subset(anonmaster3.6, rifle2.9=="TRUE",select=c("rifle2.9","devaki","rrtbin","CR.d01","d2max_cr", "ESRD_CKD5"))
View(Viwe)
subset(anonmaster3.6, rifle2.9=="TRUE" & ESRD_CKD5 != "ESRD.CKD5",select=c("rifle2.9","devaki","rrtbin","CR.d01","d2max_cr", "ESRD_CKD5"))
anonMASTER3 <- mutate(anonMASTER, devakirifle3=(d2max_cr/CR.d01)>=3)
anonmaster3 <- mutate(anonMASTER,rifle4 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)
anonmaster4 <- mutate(anonMASTER3, rifle3 = (devakirifle3=="TRUE" | rrtbin =="TRUE" | rifle4 == "TRUE))
anonmaster3 <- mutate(anonMASTER,rifle4 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)
)
)
anonmaster4 <- mutate(anonMASTER3, rifle3 = (devakirifle3=="TRUE" | rrtbin =="TRUE" | rifle4 == "TRUE))
)
)
)
)
)
)
))
library(dplyr)
anonMASTER3 <- mutate(anonMASTER, devakirifle3=(d2max_cr/CR.d01)>=3)
anonmaster3 <- mutate(anonMASTER3,rifle4 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)))
anonmaster4 <- mutate(anonmaster3, rifle3 = (devakirifle3=="TRUE" | rrtbin =="TRUE" | rifle4 == "TRUE))
))
)))
))))
anonMASTER3 <- mutate(anonMASTER, devakirifle3=(d2max_cr/CR.d01)>=3)
anonmaster3 <- mutate(anonMASTER3,rifle4 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)))
View(anonmaster3)
anonmaster4 <- mutate(anonmaster3, rifle3 = (devakirifle3=="TRUE" | rrtbin =="TRUE" | rifle4 == "TRUE"))
View(anonmaster4)
write.csv(anonmaster4,"anonmaster4.csv")
setwd("~/Desktop/Procalcitonin Day 01 Priject")
write.csv(anonmaster4,"anonmaster4.csv")
```{r Vent,cache=TRUE ,warning=FALSE}
source('~/.active-rstudio-document', echo=TRUE)
globalnoesrd<- subset(anonmaster4, ESRD_CKD5=="non ESRD.CKD5" )
## the rifle 3 outcome is a composite outcome of patients that had an aki of Cr > 3x and/or initiation or RRT
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit))
summary(globalrifle3)
globalrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=globalnoesrd, family=binomial(link=logit))
View(rifle3)
summary(globalrifle3)
library(dplyr)
anonMASTER3 <- mutate(anonMASTER, devakirifle3=(d2max_cr/CR.d01)>=3)
anonmaster3 <- mutate(anonMASTER3,rifle4 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)))
anonmaster4 <- mutate(anonmaster3, rifle3 = (devakirifle3=="TRUE" | rrtbin =="TRUE" | rifle4 == "TRUE"))
data <- anonmaster4
chf <- subset(data, CHF=="CHF")
chfnoesrd<- subset(chf, ESRD_CKD5=="non ESRD.CKD5" )
## glm for rifle3
chfrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn,data=chfnoesrd, family=binomial(link=logit))
summary(chfrifle3)
##odds ratio table
int <- exp(confint(chfrifle3))
odds <- exp(coef(chfrifle3))
akioddstable <- cbind(odds,int)
akioddstable
View(chfnoesrd)
chfrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+PHtn+Htn+min_sodium+min_hb,data=chfnoesrd, family=binomial(link=logit))
summary(chfrifle3)
library(dplyr)
anonMASTER3 <- mutate(anonMASTER, devakirifle3=(d2max_cr/CR.d01)>=3)
anonmaster3 <- mutate(anonMASTER3,rifle4 = (CR.d01 >=4 & ((d2max_cr-CR.d01)>=0.5)))
anonmaster4 <- mutate(anonmaster3, rifle3 = (devakirifle3=="TRUE" | rrtbin =="TRUE" | rifle4 == "TRUE"))
data <- anonmaster4
chf <- subset(data, CHF=="CHF")
chfnoesrd<- subset(chf, ESRD_CKD5=="non ESRD.CKD5" )
## glm for rifle3
chfrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+ESLD+PHtn+Htn+min_sodium+min_hb,data=chfnoesrd, family=binomial(link=logit))
summary(chfrifle3)
##odds ratio table
int <- exp(confint(chfrifle3))
odds <- exp(coef(chfrifle3))
akioddstable <- cbind(odds,int)
akioddstable
library(glmulti)
chfrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+Htn+min_sodium+min_hb,data=globalnoesrd, family=binomial(link=logit))
multi.global.model <- glmulti(chfrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
summary(multi.global.model)
library(glmulti)
chfrifle3 <- glm(rifle3~log(PROCALCITONIN.d01)+LACTATE.d01+ WBC.d01+DM2+CR.d01+gender+ALB.d01+Htn+min_sodium+min_hb,data=globalnoesrd, family=binomial(link=logit))
multi.global.model <- glmulti(chfrifle3, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes)
summary(multi.global.model)
bestmodel <- multi.global.model$best.model
bestmodel <- multi.global.model$bestmodel
bestmodel <- multi.global.model[$bestmodel]
bestmodel <- multi.global.model[,$bestmodel]
weightable(mult.global.model)
weightable(multi.global.model)
bestmodel <- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01)
bestmodel <- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01, data=chfnoesrd)
summary(bestmodel)
anova(bestmodel)
library("boot")
cost <- function(r, pi = 0) mean(abs(r - pi) > 0.5)  ## cost function necessary for binomial data
bestmodel.cv <- cv.glm(data=chfnoesrd, bestmodel,cost, K = 42)  # use leave-one-out cross validation (can use K-fold cross validation for larger data sets)
## Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
bestmodel#delta
bestmodel.cv$delta
warning()
m.roc <- roc(chfnoesrd$rifle3, predict(bestmodel, backtransform = TRUE))
plot(m.roc)
m.roc <- roc(chfnoesrd$rifle2, predict(bestmodel, backtransform = TRUE))
plot(m.roc)
m.roc <- roc(chfnoesrd$rifle2, predict(bestmodel, backtransform = TRUE))
m.roc <- roc(chfnoesrd$rifle2, data=chfnoesrd,predict(bestmodel, backtransform = TRUE))
plot(m.roc)
m.roc <- roc(chfnoesrd$rifle3, data=chfnoesrd,predict(bestmodel, backtransform = TRUE))
m.roc <- roc(chfnoesrd$rifle3, data=chfnoesrd,predict(bestmodel, backtransform = TRUE))
m.roc <- roc(chfnoesrd$rifle3, predict(bestmodel, backtransform = TRUE))
plot(m.roc)
length(chfnoesrd$rifle3)
length(predict(bestmodel))
m.roc
library(ROCR)
bestmodel$predictions
length(chfnoesrd$rifle3)
length(predict(bestmodel))
bestmodel <- glm(rifle3 ~ 1 + log(PROCALCITONIN.d01) + CR.d01, data=chfnoesrd, na.action=na.exclude)
length(predict(bestmodel))
modeloutput <- predict(bestmodel)
reality <- chfnoesrd$rifle3
pred <- prediction( modeloutput, reality)
perf <- performance( pred, "tpr", "fpr" )
plot( perf )
par(bg="lightblue", mai=c(1.2,1.5,1,1))
plot(perf, main="ROCR fingerpainting toolkit", colorize=TRUE,
xlab="Mary’s axis", ylab="", box.lty=7, box.lwd=5,
box.col="gold", lwd=17, colorkey.relwidth=0.5, xaxis.cex.axis=2,
xaxis.col=’blue’, xaxis.col.axis="blue", yaxis.col=’green’, yaxis.cex.axis=2,
yaxis.at=c(0,0.5,0.8,0.85,0.9,1), yaxis.las=1, xaxis.lwd=2, yaxis.lwd=3,
yaxis.col.axis="orange", cex.lab=2, cex.main=2)
library("boot")
cost <- function(r, pi = 0) mean(abs(r - pi) > 0.5)  ## cost function necessary for binomial data
bestmodel.cv <- cv.glm(data=chfnoesrd, bestmodel,cost, K = 42)  # use leave-one-out cross validation (can use K-fold cross validation for larger data sets)
bestmodel.cv$delta
plot(m.roc)
plot(m.roc)
length(bestmodel)
length(predict(bestmodel))
length(chfnoesrd$rifle3)
m.roc <- roc(chfnoesrd$rifle3, predict(bestmodel, backtransform = TRUE))
plot(m.roc)
